{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contact-async-thunk.js","redux/contact-reducer.js","redux/filter/ContactFilterActions.js","redux/filter/ContactFilterReducer.js","redux/store.js","components/Container/Container.js","redux/filter/ContactFilterSelectors.js","redux/contact-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","contact","post","deleteContact","contactId","delete","id","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","changeFilter","createAction","rootReducer","combineReducers","store","configureStore","reducer","contacts","Container","children","className","styles","container","defaultProps","getFilter","getContacts","getVisibleContacts","createSelector","name","phone","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeName","currentTarget","value","resetForm","onSubmit","event","preventDefault","alert","some","style","form","label","type","onChange","input","pattern","title","required","button","Filter","filterValue","target","ContactList","visibleContacts","div","map","onClick","onDeleteContact","App","isLoading","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKACAA,EAAOC,QAAU,CAAC,IAAM,yBAAyB,MAAQ,2BAA2B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,wB,mBCApFD,EAAOC,QAAU,CAAC,UAAY,+B,yJCE9BC,IAAMC,SAASC,QAAU,8CAElB,I,IAAMC,EAAgBC,YAC3B,yBAD2C,sBAE3C,8BAAAC,EAAA,sEACyBL,IAAMM,IAAI,aADnC,uBACUC,EADV,EACUA,KADV,kBAESA,GAFT,4CAMWC,EAAaJ,YACxB,sBADwC,uCAExC,WAAMK,GAAN,iBAAAJ,EAAA,sEACyBL,IAAMU,KAAK,YAAaD,GADjD,uBACUF,EADV,EACUA,KADV,kBAESA,GAFT,2CAFwC,uDAQ7BI,EAAgBP,YAC3B,yBAD2C,uCAE3C,WAAMQ,GAAN,iBAAAP,EAAA,sEAGYL,IAAMa,OAAN,oBAA0BD,IAHtC,uBAEYE,EAFZ,EAEIP,KAAQO,GAFZ,kBAKSA,GALT,2CAF2C,uDCbhCC,EAAQC,YAAc,IAAD,mBAC/Bb,EAAcc,WAAY,SAACC,EAAD,YAAMC,WADD,cAE/BX,EAAWS,WAAY,SAACG,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF3B,cAG/BR,EAAcM,WAAY,SAACG,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACzBC,EAAMC,QAAO,qBAAGP,KAAgBK,QAJF,IAOrBG,EAAUN,aAAc,GAAD,mBACjCb,EAAcoB,SAAU,kBAAM,KADG,cAEjCpB,EAAcc,WAAY,kBAAM,KAFC,cAGjCd,EAAcqB,UAAW,kBAAM,KAHE,cAKjChB,EAAWe,SAAU,kBAAM,KALM,cAMjCf,EAAWS,WAAY,kBAAM,KANI,cAOjCT,EAAWgB,UAAW,kBAAM,KAPK,cASjCb,EAAcY,SAAU,kBAAM,KATG,cAUjCZ,EAAcM,WAAY,kBAAM,KAVC,cAWjCN,EAAca,UAAW,kBAAM,KAXE,ICbvBC,EAAeC,YAAa,yBCE5BL,EAASL,YAAc,GAAD,eAChCS,GAAe,SAACP,EAAD,YAAMC,YCAlBQ,EAAcC,YAAgB,CAClCb,QACAM,SACAC,YAGWO,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUL,K,wBCVRM,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KAGrCD,EAAUK,aAAe,CACvBJ,SAAU,IAOGD,Q,QCfFM,EAAY,SAAAnB,GAAK,OAAIA,EAAMY,SAASX,Q,QCEpCmB,EAAc,SAAApB,GAAK,OAAIA,EAAMY,SAASjB,OAEtC0B,EAAqBC,YAChC,CAACF,EAAaD,IACd,SAACP,EAAUX,GACT,OAAOW,EAASX,QACd,gBAAGsB,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACED,EAAKE,cAAcC,SAASzB,EAAOwB,gBACnCD,EAAME,SAASzB,S,gBC2ER0B,MA/Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMnB,EAAWoB,YAAYZ,GACvBa,EAAWC,cAEXC,EAAmB,SAAC,GAAwC,IAAD,IAArCC,cAAiBb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACjD,OAAQd,GACN,IAAK,OACHM,EAAQQ,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAmBAC,EAAY,WAChBT,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMQ,SAtBa,SAAAC,GAGnB,GAFAA,EAAMC,iBAEO,KAATlB,GAA0B,KAAXO,EACjB,OAAOY,MAAM,GAAD,OAAInB,EAAJ,4BAEdX,EAAS+B,MACP,SAAAtD,GAAO,OACLA,EAAQkC,KAAKE,gBAAkBF,EAAKE,eACpCpC,EAAQmC,QAAUM,KAElBY,MAAM,GAAD,OAAInB,EAAJ,6BACLU,EAAS7C,EAAW,CAAEmC,OAAMO,YAChCQ,KAS8BvB,UAAW6B,IAAMC,KAA/C,UACE,wBAAO9B,UAAW6B,IAAME,MAAxB,iBAEE,uBACEC,KAAK,OACLxB,KAAK,OACLc,MAAOd,EACPyB,SAAUb,EACVpB,UAAW6B,IAAMK,MACjBC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEL,KAAK,MACLxB,KAAK,SACLc,MAAOP,EACPkB,SAAUb,EACVpB,UAAW6B,IAAMK,MACjBC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,8BACE,wBAAQL,KAAK,SAAShC,UAAW6B,IAAMS,OAAvC,+B,iBCjDOC,EAtBA,WACb,IAAMC,EAAcvB,YAAYb,GAC1Bc,EAAWC,cAGjB,OACE,wBAAOnB,UAAW6B,IAAME,MAAxB,kCAEE,uBACEC,KAAK,OACLxB,KAAK,SACLc,MAAOkB,EACPP,SATW,SAAC,GAAD,IAAaX,EAAb,EAAGmB,OAAUnB,MAAb,OAA2BJ,EAAS5B,EAAagC,KAU5DtB,UAAW6B,IAAMK,MACjBC,QAAQ,yHACRC,MAAM,icACNC,UAAQ,Q,iBCQDK,EAxBK,WAClB,IAAMC,EAAkB1B,YAAYX,GAC9BY,EAAWC,cAEjB,OACE,qBAAKnB,UAAW6B,IAAMe,IAAtB,SACE,6BACGD,EAAgBE,KAAI,gBAAGlE,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACnB,qBAAaT,UAAW6B,IAAMjD,MAA9B,UACG4B,EADH,IACS,sBAAMR,UAAW6B,IAAMd,OAAvB,SAAgCN,IACvC,wBACET,UAAW6B,IAAMS,OACjBN,KAAK,SACLc,QAAS,kBAVG,SAAAnE,GAAE,OAAIuC,EAAS1C,EAAcG,IAU1BoE,CAAgBpE,IAHjC,sBAFOA,W,iBCcJqE,MAnBf,WACE,IAAMC,EAAYhC,aAAY,SAAAhC,GAAK,OAAIA,EAAMY,SAASV,WAChD+B,EAAWC,cAKjB,OAJA+B,qBAAU,WACRhC,EAASlD,OACR,CAACkD,IAGF,eAAC,EAAD,WACE,oBAAIlB,UAAW6B,IAAMO,MAArB,wBACA,cAAC,EAAD,IACA,oBAAIpC,UAAW6B,IAAMO,MAArB,sBACA,cAAC,EAAD,IACCa,GAAa,oBAAIjD,UAAW6B,IAAMO,MAArB,wBACd,cAAC,EAAD,QCfNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3D,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ4D,SAASC,eAAe,U,kBCb1B5F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.b236a2b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactList_div__19yVi\",\"items\":\"ContactList_items__2ndrv\",\"button\":\"ContactList_button__2-EmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__34Ts5\",\"label\":\"Filter_label__2aSr1\",\"input\":\"Filter_input__2Kfgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__isMtp\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://619a7ea4278276001744527b.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async () => {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async contact => {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return data;\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async contactId => {\r\n    const {\r\n      data: { id },\r\n    } = await axios.delete(`/contacts/${contactId}`);\r\n\r\n    return id;\r\n  },\r\n);\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contact-async-thunk';\r\n\r\nexport const items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { changeFilter } from './ContactFilterActions';\r\n\r\nexport const filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { items, loading } from './contact-reducer';\nimport { filter } from './filter/ContactFilterReducer';\n\nconst rootReducer = combineReducers({\n  items,\n  filter,\n  loading,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n});\n","import PropTypes from 'prop-types';\nimport styles from '../Container/Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","export const getFilter = state => state.contacts.filter;\r\n","import { getFilter } from './filter/ContactFilterSelectors';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(\r\n      ({ name, phone }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        phone.includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return contacts.filter(\r\n//     ({ name, phone }) =>\r\n//       name.toLowerCase().includes(filter.toLowerCase()) ||\r\n//       phone.includes(filter),\r\n//   );\r\n// };\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contact-selectors';\nimport { addContact } from '../../redux/contact-async-thunk';\nimport style from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name === '' && number === '') {\n      return alert(`${name} is already in contacts`);\n    }\n    contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.phone === number,\n    )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeName}\n          className={style.input}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div>\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/filter/ContactFilterSelectors';\nimport { changeFilter } from '../../redux/filter/ContactFilterActions';\nimport style from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <label className={style.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n        className={style.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz deCastelmore d'Artagnan и т. п.\"\n        required\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contact-async-thunk';\nimport { getVisibleContacts } from '../../redux/contact-selectors';\nimport style from '../ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  return (\n    <div className={style.div}>\n      <ul>\n        {visibleContacts.map(({ id, name, phone }) => (\n          <li key={id} className={style.items}>\n            {name}:<span className={style.number}>{phone}</span>\n            <button\n              className={style.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contact-async-thunk';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport style from '../App/App.module.css';\n\nfunction App() {\n  const isLoading = useSelector(state => state.contacts.loading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h2 className={style.title}>Phone book</h2>\n      <ContactForm />\n      <h2 className={style.title}>Contacts</h2>\n      <Filter />\n      {isLoading && <h2 className={style.title}>Loading...</h2>}\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store';\nimport App from './components/App/App';\nimport './components/App/App.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1rDoP\",\"label\":\"ContactForm_label__1TyMp\",\"button\":\"ContactForm_button__1Z7YG\"};"],"sourceRoot":""}